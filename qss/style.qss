/*
ABOUT
version 2.05
QT theme (stylesheet) specially developed for FreeCAD
(http://www.freecadweb.org/).
It might work with other software that uses QT styling.


LICENSE
Copyright (c) 2016 Pablo Gil FernÃ¡ndez

This work is licensed under the Creative Commons Attribution-ShareAlike 4.0
International License.
To view a copy of this license, visit
http://creativecommons.org/licenses/by-sa/4.0/.
/*


/*###### RESET ###############################################################*/

/* Reseting everything helps to unify styles across different
operating systems */
* {
    padding: 0px;
    margin: 0px;
    border: 0px;
    border-style: none;
    border-image: none;
    outline: 0;
}

/* Specific reset for elements inside QToolBar */
QToolBar * {
    margin: 0px;
    padding: 0px;
}


/*###### MAIN WINDOW #########################################################*/

QDockWidget {
    color: @white;
    background-color: transparent; /* Main background color */
}

QMainWindow,
QToolBar,
QMainWindow QColorDialog,
QColorDialog,
QFrame,
QDialog {
    background-color: @mainBackground;
    color: @white;
    font-family: "Roboto";
    font-size: 9pt;
}

QTabWidget > QWidget,
QWidget > QSplitter {
    background-color: transparent;
}

QStackedWidget > QDialog {
    background-color: transparent;
}

QMdiArea {
    background-image: url("qss:icons/favicon.png");
    background-position: center center;
    background-repeat: no-repeat;
}

/*###### SIZE GRIP ###########################################################*/

QSizeGrip {
    image: url("qss:icons/sizegrip_dark.png");
}


/*###### MENUS ###############################################################*/

QMenuBar,
QMenuBar::item {
    color: @white;
    background-color: @tableBackground;
}

QMenuBar::item {
    padding: 6px;
}

QMenuBar {
    border-bottom: 1px solid @menuBackground;
}

QMenu,
QMenu::item {
    color: @white;
    background-color: @menuBackground;
    text-decoration: none;
}

QMenuBar::item:selected {
    color: @white;
    background-color: @menuHoverBackground;
}

QMenuBar::item:pressed {
    color: @white;
    background-color: @menuSelectionbackground;
}

QMenu::item:selected,
QMenu::item:pressed {
    color: @white;
    background-color: @menuSelectionbackground;
    border-radius: 3px;
}

QMenuBar::item:disabled,
QMenu::item:disabled {
    color: @disabledText;
}

QMenu::right-arrow {
    width: 10px;
    height: 10px;
    image:url("qss:icons/right_arrow_light.png");
    margin-right: 2px;
}

QMenu::right-arrow:selected {
    image:url("qss:icons/right_arrow_lighter.png");
}

QMenu::item {
    padding: 2px 26px 2px 10px; /* make room for icon at left */
    border: 1px solid transparent; /* reserve space for selection border */
}

QMenu::icon {
    margin-left: 2px;
}

QMenu::separator {
    height: 1px;
    background-color: @menuBackground;
    margin: 6px 4px;
}

QMenu::indicator:non-exclusive:checked {
    color: @white;
}

/* Fix for elements inside a drop-down menu */
QMenu QRadioButton,
QMenu QCheckBox,
QMenu QPushButton,
QMenu QToolButton {
    color: @white; /* Same as regular QRadioButton and QCheckBox */
}

QMenu QRadioButton:hover,
QMenu QCheckBox:hover,
QMenu QPushButton:hover,
QMenu QToolButton:hover,
QMenu QPushButton:pressed,
QMenu QToolButton:pressed,
QMenu QPushButton:selected,
QMenu QToolButton:selected {
    color: @white;
    background-color: @menuHoverBackground; /* Same as QMenu::item:selected and QMenu::item:pressed */
}

QMenu QRadioButton:disabled,
QMenu QCheckBox:disabled {
    color: @disabledText;
}

QMenu QRadioButton::indicator:disabled,
QMenu QCheckBox::indicator:disabled {
    color: @disabledText;
    background-color: transparent;
    border: 1px solid @disabledText;
}


/*###### TOOL BAR ############################################################*/

QToolBar {
    background-color: @tableBackground;
    border: none;
    padding: 2px;
}

QToolBar::handle:top,
QToolBar::handle:bottom,
QToolBar::handle:horizontal {
    background-image: url("qss:icons/Hmovetoolbar_light.png");
    width: 10px;
    margin: 4px 2px;
    background-position: top right;
    background-repeat: repeat-y;
}

QToolBar::handle:left,
QToolBar::handle:right,
QToolBar::handle:vertical {
    background-image: url("qss:icons/Vmovetoolbar_light.png");
    height: 10px;
    margin: 2px 4px;
    background-position: left bottom;
    background-repeat: repeat-x;
}

QToolBar::separator:top,
QToolBar::separator:bottom,
QToolBar::separator:horizontal {
    width: 1px;
    margin: 6px 4px;
    background-color: @tableBackground;
}

QToolBar::separator:left,
QToolBar::separator:right,
QToolBar::separator:vertical {
    height: 1px;
    margin: 4px 6px;
    background-color: @tableBackground;
}

/*###### STATUS BAR ##########################################################*/

QStatusBar {
    background-color: @tableBackground;
    border-top: 1px solid @menuBackground;
}

QStatusBar::item {
    border: 0px solid transparent;
}


/*###### GROUP BOX ###########################################################*/

QGroupBox {
    color: @tableBackground;
    border-top: 1px solid @borders; /* Lighter than its own border-color */;
    margin-top: 10px;
    padding: 6px;
}

QGroupBox:title {
    top: -8px;
    left: 12px;
    padding: 0px 6px;
}


/*###### TOOL TIP ############################################################*/

QToolTip {
    color: @white;
    background-color: @mainBackground;
    border: 1px solid @borders; /* Lighter than its own border-color */;
    opacity: 90%; /* Doesn't correctly work */
    padding: 4px;
    border-radius: 3px; /* Has no effect */
}


/*###### DOCK WIDGET #########################################################*/

QDockWidget {
    color: @white;
    titlebar-close-icon: url("qss:icons/close_light.png");
    titlebar-normal-icon: url("qss:icons/undock_light.png");
}

QDockWidget::title {
    text-align: center;
    background-color: transparent;
    border: 4px solid @mainBackground; /* Fix to simulate margin between this :title and tabs */ /* same as main background color */
    border-radius: 6px; /* Bigger than normal due to previous border fix */
    padding: 4px 0px; /* Also needed because of previous border fix */
}

QDockWidget::close-button,
QDockWidget::float-button {
    border: none;
    background: transparent;
    border-radius: 3px;
    subcontrol-origin: padding;
    subcontrol-position: right center;
}

QDockWidget::close-button {
    right: 4px;
}

QDockWidget::float-button {
    right: 22px;
}

QDockWidget::close-button:hover,
QDockWidget::float-button:hover {
    background-color: @buttonBackgroundDefault;
    border: 1px solid @menuBackground;
}

QDockWidget::close-button:pressed,
QDockWidget::float-button:pressed {
    background-color: @buttonBackgroundHover;
}

/* Fix for Python Console (probably there is a smarter way to arrive to it) */
QDockWidget > QFrame {
    background-color: @tableBackground;
    border: 1px solid @borders;
}


/*###### PROGRESS BAR ########################################################*/

QProgressBar,
QProgressBar:horizontal {
    color: @white;
    background-color: @buttonBackgroundDefault;
    text-align: center;
    border: 1px solid @menuBackground;
    /*padding: 1px;*/
    border-radius: 4px;
}
QProgressBar::chunk,
QProgressBar::chunk:horizontal {
    background-color: @selectionBackgroundColor;
    border-radius: 3px;
}

/*###### LINES \##############################################################*/

/* ! Not working */

/* QFrame::HLine == 0x0004 */
QFrame[frameShape="4"] {
    border: 1px solid @borders;
    background: @white;
}

/* QFrame::VLine == 0x0005 */
QFrame[frameShape="5"] {
    border: 1px solid @borders;
    background: @white;
}


/*###### SCROLL ##############################################################*/

QAbstractScrollArea {
    border-radius: 2px;
    background-color: transparent;
}

QAbstractScrollArea::corner {
    border: none;
    border-radius: 2px;
    background-color: transparent;
}

/* Horizontal scrollbar */
QScrollBar:horizontal {
    background-color: @tableBackground;
    border: 1px solid @menuBackground;
    height: 13px;
    margin: 1px;
    border-radius: 4px;
}

QScrollBar::handle:horizontal {
    background-color: @scrollHandleColor;
    min-width: 30px;
    border-radius: 4px;
}

QScrollBar::handle:horizontal:hover {
    background-color: @scrollHandleHoverColor;
}

QScrollBar::sub-line:horizontal {
    margin: 0px; /* 1px to correctly fit the 10px width image */
    width: 0px;
    height: 0px;
    subcontrol-position: left;
    subcontrol-origin: margin;
}

QScrollBar::add-line:horizontal {
    margin: 0px; /* 1px to correctly fit the 10px width image */
    width: 0px;
    height: 0px;
    subcontrol-position: right;
    subcontrol-origin: margin;
}

QScrollBar::sub-line:horizontal:hover,
QScrollBar::sub-line:horizontal:on {
}

QScrollBar::add-line:horizontal:hover,
QScrollBar::add-line:horizontal:on {
}

QScrollBar::up-arrow:horizontal,
QScrollBar::down-arrow:horizontal {
    background-color: none;
}

QScrollBar::add-page:horizontal,
QScrollBar::sub-page:horizontal {
    background-color: transparent;
}


/* Vertical scrollbar */
QScrollBar:vertical {
    background-color: @tableBackground;
    border: 1px solid @menuBackground;
    width: 13;
    margin: 1px;
    border-radius: 6px;
}

QScrollBar::handle:vertical {
    background-color: @scrollHandleColor;
    min-height: 30px;
    border-radius: 6px;
}

QScrollBar::handle:vertical:hover {
    background-color: @scrollHandleHoverColor;
}

QScrollBar::sub-line:vertical {
    margin: 0px; /* 1px to correctly fit the 10px width image */
    width: 0px;
    height: 0px;
    subcontrol-position: top;
    subcontrol-origin: margin;
}

QScrollBar::add-line:vertical {
    margin: 0px; /* 1px to correctly fit the 10px width image */
    width: 0px;
    height: 0px;
    subcontrol-position: bottom;
    subcontrol-origin: margin;
}

QScrollBar::sub-line:vertical:hover,
QScrollBar::sub-line:vertical:on {
}

QScrollBar::add-line:vertical:hover,
QScrollBar::add-line:vertical:on {
}

QScrollBar::up-arrow:vertical,
QScrollBar::down-arrow:vertical {
    background-color: none;
}

QScrollBar::add-page:vertical,
QScrollBar::sub-page:vertical {
    background-color: transparent;
}

/*###### TOOL BOX ############################################################*/

QToolBox::tab {
    color: @white;
    background: @menuBackground;
    border-radius: 5px;

}

QToolBox::tab:hover { /* italicize selected tabs */
    background-color: @menuHoverBackground;
}

QToolBox::tab:selected { /* italicize selected tabs */
    color: white;
    background-color: @menuSelectionbackground;
}


/*###### TAB BAR #############################################################*/

QTabWidget::pane {
    background-color: transparent; /* temporal (transparent background) */ /* tab content background color */
    position: absolute;
}

QTabWidget::pane:top,
QTabWidget::pane:bottom,
QTabWidget::pane:left,
QTabWidget::pane:right {
    border: 0px solid transparent; /* necessary */
}

QTabWidget::tab-bar {
    alignment: center;
}

QTabBar {
    qproperty-drawBase: 0; /* important */
    background-color: transparent;
}

/* Workaround for QTabBars created from docked QDockWidgets which don't draw the border if not set and reseted as follows: */
QTabBar {
    border: 0px solid transparent;  /* set color for all QTabBars */
    alignment: center;
}

QDockWidget QTabBar {
    border-color: transparent; /* set color for all QTabBars but ones created from QDockWidget */
}

QDialog QTabBar {
    border-color: transparent; /* set color for QTabBars inside Preferences dialog */
}
/* end fix */

QTabBar::tab {
    background-color: @buttonBackgroundDefault;
    border-width: 0px;
    border-style: solid;
    border-color: @borders;
    /* border: 1px solid @borders; */
    position: center;
}

QTabBar::tab:top,
QTabBar::tab:bottom {
    min-width: 14ex;
    min-height: 20px;
    padding: 0px 8px 0px 8px;
}

QTabBar::tab:left,
QTabBar::tab:right {
    min-height: 14ex;
    min-width: 20px;
    padding: 8px 0px 8px 0px;
}

QTabBar::tab:top:first,
QTabBar::tab:bottom:first {
    border-left: 0px solid @borders;
    border-top-left-radius: 4px;
    border-bottom-left-radius: 4px;
}

QTabBar::tab:left:first,
QTabBar::tab:right:first {
    border-top: 0px solid @borders;
    border-top-right-radius: 4px;
    border-top-left-radius: 4px;
}

QTabBar::tab:top:last,
QTabBar::tab:bottom:last {
    border-top-right-radius: 4px;
    border-bottom-right-radius: 4px;
}

QTabBar::tab:left:last,
QTabBar::tab:right:last {
    border-bottom-right-radius: 4px;
    border-bottom-left-radius: 4px;
}

QTabBar::tab:only-one {
    border: 0px solid @borders;
    border-radius: 4px;
}

QTabBar::tab:selected {
    color: @selectionColor;
}

QTabBar::tab:top:selected,
QTabBar::tab:bottom:selected {
    background-color: @selectionBackgroundColor;
    border-right-color: black;
    border-left-color: black;
}

QTabBar::tab:right:selected,
QTabBar::tab:left:selected {
    background-color: @selectionBackgroundColor;
    border-color: black;
}

QTabBar::tab:!selected {
    color: @white;
}

QLabel, QGroupBox {
    color: @white;
    background-color: transparent;
}

QLabel:disabled, QGroupBox:disabled {
    color: @disabledText;
}

QTabBar::tab:top:!selected:hover,
QTabBar::tab:bottom:!selected:hover {
    background-color: @buttonBackgroundHover;
}

QTabBar::tab:left:!selected:hover,
QTabBar::tab:right:!selected:hover {
    background-color: @buttonBackgroundHover;
}

QTabBar::tab:first:selected {
    margin-left: 0; /* the first selected tab has nothing to overlap with on the left */
}

QTabBar::tab:last:selected {
    margin-right: 0; /* the last selected tab has nothing to overlap with on the right */
}

QTabBar::tab:only-one {
    margin: 0; /* if there is only one tab, we don't want overlapping margins */
}

/* hack to access Preference TabBar background */
QDialog#Gui__Dialog__DlgPreferences > QFrame QFrame {
    background-color: transparent; /* main background color (in Windows is @mainBackground) */
}

/* fix for previous hack that broke QTabWidget background on Windows */
QDialog#Gui__Dialog__DlgPreferences QTabWidget::pane {
    background-color: transparent; /* temporal (transparent background) */
}

/* hack to correctly align Preferences icon list on OSX */
QDialog#Gui__Dialog__DlgPreferences > QListView {
    min-width: 130px;
}

/* unique styles for sections inside Preferences */
QDialog#Gui__Dialog__DlgPreferences > QListView::item {
    border-radius: 4px;
}

QDialog#Gui__Dialog__DlgPreferences > QListView::item:hover {
    background-color: #b4b4b4;
}

QDialog#Gui__Dialog__DlgPreferences > QListView::item:selected {
    color: @white;
    background-color: @selectionBackgroundColor;;
}


/*###### TAB BAR BUTTONS #####################################################*/

/* Close button */
QTabBar::close-button {
    subcontrol-origin: margin;
    subcontrol-position: center right; /* only works for QT 4.6 and newer */;
    border-radius: 2px;
    background-image: url("qss:icons/close_light.png");
    background-position: center center;
    background-repeat: none;
}

QTabBar::close-button:hover {
    background-color: @buttonBackgroundDefault;
    border: 0px solid @menuBackground;
}

QTabBar::close-button:pressed {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 rgb(95, 95, 95), stop:1 rgb(145, 145, 145));
}

/* Fix for lists inside Model tab */
QDockWidget QTreeView,
QDockWidget QListView,
QDockWidget QTableView {
    margin: 6px;
    border: 1px solid @menuBackground; /* same as regular QTreeView, QListView and QTableView */
    min-height: 40px; /* neccesary in some areas of FreeCAD */
}

/* Buttons to scroll tabs if there is not space to show all of them: */
QTabBar::scroller {
    width: 20px; /* the width of the scroll buttons */
}

QTabBar QToolButton,
QTabBar QToolButton:hover {
    background-color: @buttonBackgroundDisabled; /* same as main background color */
}

QTabBar QToolButton::right-arrow:enabled {
     image: url("qss:icons/right_arrow_light.png");
}

QTabBar QToolButton::right-arrow:disabled,
QTabBar QToolButton::right-arrow:off {
     image: url("qss:icons/right_arrow_disabled_light.png");
}

QTabBar QToolButton::right-arrow:hover {
     image: url("qss:icons/right_arrow_lighter.png");
}

 QTabBar QToolButton::left-arrow:enabled {
     image: url("qss:icons/left_arrow_light.png");
}

 QTabBar QToolButton::left-arrow:disabled,
 QTabBar QToolButton::left-arrow:off {
     image: url("qss:icons/left_arrow_disabled_light.png");
}

 QTabBar QToolButton::left-arrow:hover {
     image: url("qss:icons/left_arrow_lighter.png");
}

 QTabBar QToolButton::up-arrow:enabled {
     image: url("qss:icons/up_arrow_light.png");
}

 QTabBar QToolButton::up-arrow:disabled,
 QTabBar QToolButton::up-arrow:off {
     image: url("qss:icons/up_arrow_disabled_light.png");
}

 QTabBar QToolButton::up-arrow:hover {
     image: url("qss:icons/up_arrow_lighter.png");
}

 QTabBar QToolButton::down-arrow:enabled {
     image: url("qss:icons/down_arrow_light.png");
}

 QTabBar QToolButton::down-arrow:disabled,
 QTabBar QToolButton::down-arrow:off {
     image: url("qss:icons/down_arrow_disabled_light.png");
}

 QTabBar QToolButton::down-arrow:hover {
     image: url("qss:icons/down_arrow_lighter.png");
}

QTabBar::tear {

}


/*###### TREE AND LIST VIEWS #################################################*/

QAbstractItemView
{
    alternate-background-color: @selectionHoverColor;
}

QTreeView,
QListView,
QTableView {
    color: @white;
    background-color: @tableBackground;
    border: 1px solid @menuBackground;
    selection-color: @white;
    selection-background-color: @selectionBackgroundColor; /* should be similar to QListView::item selected background-color */
    show-decoration-selected: 1; /* make the selection span the entire width of the view */
    border-radius: 3px;
}

QTreeView:disabled,
QListView:disabled,
QTableView:disabled {
    color: @disabledText;
}

QListView::item,
QTreeView::item  {
    background-color: transparent; /* fix to homogenize it on all OSs */
    border: 1px solid transparent;
    border-radius: 3px;
}

QListView::item:hover,
QTreeView::item:hover  {
    background-color: @selectionHoverColor; /* fix to homogenize it on all OSs */
    border: 0px solid @lightGrey;
    border-radius: 3px;
}

QListView::item:selected  {
    color: @selectionColor; /* should be similar to QListView selection-color */
    background-color: @selectionBackgroundColor; /* should be similar to QListView selection-background-color */
    show-decoration-selected: 1; /* make the selection span the entire width of the view */
    border: 1px solid transparent;
    border-radius: 3px;
}

QTreeView::item:selected  {
    color: @selectionColor; /* should be similar to QListView selection-color */
    background-color: @selectionBackgroundColor; /* should be similar to QListView selection-background-color */
    show-decoration-selected: 1; /* make the selection span the entire width of the view */
    border: 0px solid transparent;
    border-radius: 3px;
    border-top-left-radius: 0px;
    border-bottom-left-radius: 0px;
}

QTreeView::item:disabled  {
    color: @disabledText;
}

/* reset min-height to 0px inside list views */
QTreeView > QWidget > QComboBox,
QTreeView > QWidget > QAbstractSpinBox,
QTreeView > QWidget > QSpinBox,
QTreeView > QWidget > QDoubleSpinBox,
QTreeView > QWidget > QLineEdit,
QTreeView > QWidget > QTextEdit,
QTreeView > QWidget > QTimeEdit,
QTreeView > QWidget > QDateEdit,
QTreeView > QWidget > QDateTimeEdit,
QTreeView > QWidget > Gui--ColorButton {
    min-height: 0px;
}

/* set border-radius to 0px inside list views */
QTreeView > QWidget > QComboBox,
QTreeView > QWidget > QAbstractSpinBox,
QTreeView > QWidget > QSpinBox,
QTreeView > QWidget > QDoubleSpinBox,
QTreeView > QWidget > QLineEdit,
QTreeView > QWidget > QTextEdit,
QTreeView > QWidget > QTimeEdit,
QTreeView > QWidget > QDateEdit,
QTreeView > QWidget > QDateTimeEdit,
QTreeView > QWidget > QComboBox:drop-down,
QTreeView > QWidget > QAbstractSpinBox:up-button,
QTreeView > QWidget > QSpinBox:up-button,
QTreeView > QWidget > QDoubleSpinBox:up-button,
QTreeView > QWidget > QTimeEdit:up-button,
QTreeView > QWidget > QDateEdit:up-button,
QTreeView > QWidget > QDateTimeEdit:up-button,
QTreeView > QWidget > QAbstractSpinBox:down-button,
QTreeView > QWidget > QSpinBox:down-button,
QTreeView > QWidget > QDoubleSpinBox:down-button,
QTreeView > QWidget > QTimeEdit:down-button,
QTreeView > QWidget > QDateEdit:down-button,
QTreeView > QWidget > QDateTimeEdit:down-button,
QTreeView > QWidget > Gui--ColorButton {
    border-radius: 0px;
}

/* set focus colors to best viewing the editable fields */
QTreeView > QWidget > QComboBox:focus {
    border-right-color: @buttonBackgroundBright1; /* same as focused background color */
    border-left-color: @buttonBackgroundBright1; /* same as focused background color */
    border-color: #535353;
}

/* set focus colors to best viewing the editable fields */
QTreeView > QWidget > QAbstractSpinBox:focus,
QTreeView > QWidget > QSpinBox:focus,
QTreeView > QWidget > QDoubleSpinBox:focus,
QTreeView > QWidget > QLineEdit:focus,
QTreeView > QWidget > QTextEdit:focus,
QTreeView > QWidget > QTimeEdit:focus,
QTreeView > QWidget > QDateEdit:focus,
QTreeView > QWidget > QDateTimeEdit:focus {
    border-color: rgb(85, 85, 85);
}

QTreeView > QWidget > QAbstractSpinBox:read-only,
QTreeView > QWidget > QSpinBox:read-only,
QTreeView > QWidget > QDoubleSpinBox:read-only,
QTreeView > QWidget > QLineEdit:read-only,
QTreeView > QWidget > QTextEdit:read-only,
QTreeView > QWidget > QTimeEdit:read-only,
QTreeView > QWidget > QDateEdit:read-only,
QTreeView > QWidget > QDateTimeEdit:read-only {
    color: transparent;
    background-color: transparent;
    border-color: transparent;
}


/*###### HEADER LISTS AND TREES ##############################################*/

QHeaderView {
    color: @white;
    background-color: @tableHeader;
    border-top-left-radius: 2px; /* 1px less than its container */
    border-top-right-radius: 2px; /* 1px less than its container */
    border-bottom-left-radius: 0px;
    border-bottom-right-radius: 0px;
}

QHeaderView::section {
    border:none;
    padding: 4px 6px;
    background-color: @tableHeader;
}

QHeaderView::section:horizontal {
    padding: 4px 6px; /* left and right value similar to QHeaderView::section */
    border-right: 0px solid @borders;
    border-bottom: 1px solid @tableBorders;
}

QHeaderView::section:vertical {
    border-bottom: 0px solid  @borders;
    border-right: 1px solid @tableBorders;
}

QTableCornerButton::section {
    background-color: @tableHeader;
    border-top: none;
    border-left: none;
    border-bottom: 1px solid @tableBorders;
}

QHeaderView::up-arrow {
    image: url("qss:icons/up_arrow_light.png");
}

QHeaderView::up-arrow:hover {
    image: url("qss:icons/up_arrow_lighter.png");
}

QHeaderView::down-arrow {
    padding: 10px;
    subcontrol-origin: padding;
    subcontrol-position: center right;
    image: url("qss:icons/down_arrow_light.png");
}

QHeaderView::down-arrow:hover {
    image: url("qss:icons/down_arrow_lighter.png");
}

/* Group header inside Property Editor (FreeCAD custom widget) */
Gui--PropertyEditor--PropertyEditor {
    qproperty-groupTextColor: @tableHeader;
    qproperty-groupBackground: #8c8c8c;
}


/*###### BRANCH QTREEVIEW ####################################################*/

QTreeView::branch  {
    color: @white;
    background: transparent;
}


QTreeView::branch:has-siblings:!adjoins-item {
    border-image: url("qss:icons/transparent.png");
}

QTreeView::branch:has-siblings:adjoins-item {
    border-image: url("qss:icons/transparent.png");
}

QTreeView::branch:!has-children:!has-siblings:adjoins-item {
    border-image: url("qss:icons/transparent.png");
}

QTreeView::branch:has-children:!has-siblings:closed,
QTreeView::branch:closed:has-children:has-siblings {
    image: url("qss:icons/branch_closed.png");
}

QTreeView::branch:open:has-children:!has-siblings,
QTreeView::branch:open:has-children:has-siblings  {
    image: url("qss:icons/branch_open.png");
}

QTreeView::branch:has-children:!has-siblings:closed:hover,
QTreeView::branch:closed:has-children:has-siblings:hover {
    image: url("qss:icons/branch_closed-on.png");
    }

QTreeView::branch:open:has-children:!has-siblings:hover,
QTreeView::branch:open:has-children:has-siblings:hover  {
    image: url("qss:icons/branch_open-on.png");
    }


/*###### PLITTER AND WINDOW SEPARATOR ########################################*/

QSplitter::handle {
    margin: 0px;
    padding: 0px;
}

QSplitter::handle:horizontal {
    width: 2px;
    margin: 2px;
    padding: 0px;
    background-position: center center;
    background-repeat: repeat-y;
}

QSplitter::handle:vertical {
    height: 2px;
    margin: 2px;
    padding: 0px;
    background-position: center center;
    background-repeat: repeat-x;
}

/* Similar to the splitter is the following window separator (but horizontal/vertical is on the opposite way) */
QMainWindow::separator {
    background-position: center center;
    background-repeat: none;
}

QMainWindow::separator:horizontal {
    width: 2px;
    margin: 0px;
    padding: 0px;
    background-image: url("qss:icons/horizontal_line.png");
    background-position: center center;
    background-repeat: repeat-x;
}

QMainWindow::separator:vertical {
    height: 2px;
    margin: 0px;
    padding: 0px;
    background-image: url("qss:icons/vertical_line.png");
    background-position: center center;
    background-repeat: repeat-y;
}


/*###### TEXT/PYTHON EDITOR ##################################################*/

QPlainTextEdit,
QPlainTextEdit:focus {
    background-color: @tableBackground;
    selection-color: @white;
    selection-background-color: @selectionBackgroundColor;
    border: 0px solid @borders;
    border-radius: 3px;
    margin: 4px;
}


/*###### BUTTONS #############################################################*/

/* Common */
QAbstractSpinBox,
QSpinBox,
QDoubleSpinBox,
QLineEdit,
QTextEdit,
QPlainTextEdit,
QTimeEdit,
QDateEdit,
QDateTimeEdit {
    color: @white;
    background-color: @tableBackground;
    selection-color: @white;
    selection-background-color: @borders;
    border: 1px solid @menuBackground;
    border-radius: 4px;
    margin: 0px;
    min-width: 50px; /* it ensures the default value is correctly displayed */
    min-height: 20px; /* important to be a pair number in order to up/down buttons to be divisible by two (if not set could create a blank line in Ubuntu. Its downside is that it's needed to reset it (min-width: 0px) on following elements that can't have it such as fields inside QToolBar and inside QTreeView (Property editor) */
    /* padding: 1px 2px;  */
}

QAbstractSpinBox:hover,
QSpinBox:hover,
QDoubleSpinBox:hover,
QLineEdit:hover,
QTextEdit:hover,
QPlainTextEdit:hover,
QTimeEdit:hover,
QDateEdit:hover,
QDateTimeEdit:hover {
    background-color: @inputHover;
}

/* shifts text/number editable field to the left to make space for the up/down or drop-down buttons */
QComboBox,
QAbstractSpinBox,
QSpinBox,
QDoubleSpinBox,
QTimeEdit,
QDateEdit,
QDateTimeEdit {
    padding: 2px 10px;
}



QAbstractSpinBox:focus,
QSpinBox:focus,
QDoubleSpinBox:focus,
QLineEdit:focus,
QTextEdit:focus,
QPlainTextEdit:focus,
QTimeEdit:focus,
QDateEdit:focus,
QDateTimeEdit:focus {
    color: @white;
    border-color: @menuBackground;
    background-color: @inputFocus;
    margin: 0px;
}

QAbstractSpinBox:disabled,
QSpinBox:disabled,
QDoubleSpinBox:disabled,
QLineEdit:disabled,
QTextEdit:disabled,
QPlainTextEdit:disabled,
QTimeEdit:disabled,
QDateEdit:disabled,
QDateTimeEdit:disabled {
    color: @disabledText;
    background-color: @buttonBackgroundDisabled; /* same as enabled color */
    border-color: @menuBackground; /* same as enabled color */
}

QAbstractSpinBox:up-button,
QSpinBox:up-button,
QDoubleSpinBox:up-button,
QTimeEdit:up-button,
QDateEdit:up-button,
QDateTimeEdit:up-button,
QAbstractSpinBox:down-button,
QSpinBox:down-button,
QDoubleSpinBox:down-button,
QTimeEdit:down-button,
QDateEdit:down-button,
QDateTimeEdit:down-button {
    background-color: transparent; /* same color for QComboBox background-color */
    subcontrol-origin: border; /* important */
    width: 20px; /* same as QComboBox ... QDateTimeEdit padding-right */
}

QAbstractSpinBox:up-button,
QSpinBox:up-button,
QDoubleSpinBox:up-button,
QTimeEdit:up-button,
QDateEdit:up-button,
QDateTimeEdit:up-button {
    subcontrol-position: top right;
    border-top-right-radius: 3px;
}

QAbstractSpinBox:down-button,
QSpinBox:down-button,
QDoubleSpinBox:down-button,
QTimeEdit:down-button,
QDateEdit:down-button,
QDateTimeEdit:down-button {
    subcontrol-position: bottom right;
    border-bottom-right-radius: 3px;
}

/*QAbstractSpinBox:up-button:focus,
QSpinBox:up-button:focus,
QDoubleSpinBox:up-button:focus,
QTimeEdit:up-button:focus,
QDateEdit:up-button:focus,
QDateTimeEdit:up-button:focus {
    background-color: qlineargradient(spread:pad, x1:1, y1:0.8, x2:1, y2:0, stop:0 #6f9efa, stop:1 #7cabf9);
}

QAbstractSpinBox:down-button:focus,
QSpinBox:down-button:focus,
QDoubleSpinBox:down-button:focus,
QTimeEdit:down-button:focus,
QDateEdit:down-button:focus,
QDateTimeEdit:down-button:focus {
    background-color: qlineargradient(spread:pad, x1:1, y1:0.8, x2:1, y2:0, stop:0 @selectionBackgroundColor;, stop:1 #6f9efa);
}*/

QAbstractSpinBox:up-button:disabled,
QSpinBox:up-button:disabled,
QDoubleSpinBox:up-button:disabled,
QTimeEdit:up-button:disabled,
QDateEdit:up-button:disabled,
QDateTimeEdit:up-button:disabled,
QAbstractSpinBox:down-button:disabled,
QSpinBox:down-button:disabled,
QDoubleSpinBox:down-button:disabled,
QTimeEdit:down-button:disabled,
QDateEdit:down-button:disabled,
QDateTimeEdit:down-button:disabled {
    background-color: transparent;
}

QAbstractSpinBox::up-arrow,
QSpinBox::up-arrow,
QDoubleSpinBox::up-arrow,
QTimeEdit::up-arrow,
QDateEdit::up-arrow,
QDateTimeEdit::up-arrow {
    image: url("qss:icons/up_arrow_light.png");
    top: 2px; /* fix symmetry between up and down images */
}

QAbstractSpinBox::up-arrow:focus,
QSpinBox::up-arrow:focus,
QDoubleSpinBox::up-arrow:focus,
QTimeEdit::up-arrow:focus,
QDateEdit::up-arrow:focus,
QDateTimeEdit::up-arrow:focus {
    image: url("qss:icons/up_arrow_light.png");
}

QAbstractSpinBox::up-arrow:focus:hover,
QSpinBox::up-arrow:focus:hover,
QDoubleSpinBox::up-arrow:focus:hover,
QTimeEdit::up-arrow:focus:hover,
QDateEdit::up-arrow:focus:hover,
QDateTimeEdit::up-arrow:focus:hover {
    image: url("qss:icons/up_arrow_lighter.png");
}

QAbstractSpinBox::up-arrow:off,
QSpinBox::up-arrow:off,
QDoubleSpinBox::up-arrow:off,
QTimeEdit::up-arrow:off,
QDateEdit::up-arrow:off,
QDateTimeEdit::up-arrow:off {
    image: url("qss:icons/up_arrow_disabled_light.png");
}

QAbstractSpinBox::up-arrow:disabled,
QSpinBox::up-arrow:disabled,
QDoubleSpinBox::up-arrow:disabled,
QTimeEdit::up-arrow:disabled,
QDateEdit::up-arrow:disabled,
QDateTimeEdit::up-arrow:disabled {
    image: url("qss:icons/up_arrow_disabled_light.png");
}

QAbstractSpinBox::down-arrow,
QSpinBox::down-arrow,
QDoubleSpinBox::down-arrow,
QTimeEdit::down-arrow,
QDateEdit::down-arrow,
QDateTimeEdit::down-arrow {
    image: url("qss:icons/down_arrow_light.png");
    bottom: 0px; /* fix simetry between up and down images */
}

QAbstractSpinBox::down-arrow:focus,
QSpinBox::down-arrow:focus,
QDoubleSpinBox::down-arrow:focus,
QTimeEdit::down-arrow:focus,
QDateEdit::down-arrow:focus,
QDateTimeEdit::down-arrow:focus {
    image: url("qss:icons/down_arrow_light.png");
}

QAbstractSpinBox::down-arrow:focus:hover,
QSpinBox::down-arrow:focus:hover,
QDoubleSpinBox::down-arrow:focus,
QTimeEdit::down-arrow:focus:hover,
QDateEdit::down-arrow:focus:hover,
QDateTimeEdit::down-arrow:focus:hover {
    image: url("qss:icons/down_arrow_lighter.png");
}

QAbstractSpinBox::down-arrow:off,
QSpinBox::down-arrow:off,
QDoubleSpinBox::down-arrow:off,
QTimeEdit::down-arrow:off,
QDateEdit::down-arrow:off,
QDateTimeEdit::down-arrow:off {
    image: url("qss:icons/down_arrow_disabled_light.png");
}

QAbstractSpinBox::down-arrow:disabled,
QSpinBox::down-arrow:disabled,
QDoubleSpinBox::down-arrow:disabled,
QTimeEdit::down-arrow:disabled,
QDateEdit::down-arrow:disabled,
QDateTimeEdit::down-arrow:disabled {
    image: url("qss:icons/down_arrow_disabled_light.png");
}

/* ComboBox */
QComboBox {
    color: @white;
    background-color: @buttonBackgroundDefault;
    selection-color: @white;
    selection-background-color: @selectionBackgroundColor;
    border: 0px solid @menuBackground;
    border-radius: 4px;
    border-color: @borders;
    min-width: 50px; /* it ensures the default value is correctly displayed */
    min-height: 20px; /* important to be a pair number in order to up/down buttons to be divisible by two (if not set could create a blank line in Ubuntu. Its downside is that it's needed to reset it (min-width: 0px) on following elements that can't have it such as fields inside QToolBar and inside QTreeView (Property editor) */
}

QComboBox:hover {
    background-color: @buttonBackgroundHover;
}

QComboBox:on,
QComboBox:focus {
    background-color: @buttonBackgroundBright1;
}

QComboBox:disabled {
    color: @disabledText;
    background-color: @buttonBackgroundDisabled; /* same as enabled color */
    border-color: @borders; /* same as enabled color */
}

QComboBox::drop-down {
    background-color: transparent; /* same color as up/down QSpinBox ... QDateTimeView background-color */
    border: 0px solid transparent;
    border-color: @borders;
    border-left-color: transparent;
    subcontrol-origin: border; /* important */
    subcontrol-position: top right;
    width: 20px;
    border-top-right-radius: 3px;
    border-bottom-right-radius: 3px;
}

QComboBox::drop-down:disabled {
    color: @disabledText;
    background-color: @buttonBackgroundDisabled; /* same as enabled color */
    border-color: @borders; /* same as enabled color */
    border-left-color: transparent;
}

QComboBox::drop-down:on,
QComboBox::drop-down:focus {
    background-color: @buttonBackgroundBright1;
}

QComboBox::down-arrow {
    image: url("qss:icons/down_arrow_light.png");
}

QComboBox::down-arrow:on,
QComboBox::down-arrow:focus {
    image: url("qss:icons/down_arrow_lighter.png");
}

QComboBox::down-arrow:off,
QComboBox::down-arrow:disabled {
    image: url("qss:icons/down_arrow_disabled_light.png");
}

/* ComboBox menu */
QComboBox QAbstractItemView {
    background-color: @buttonBackgroundDefault;
    selection-background-color: @buttonBackgroundBright1;
    border-style: solid;
    border-color: transparent;
    margin: 0px -1px 0px 0px; /* hack for Mac... try it on Windows and Linux */
}


/*###### PUSH BUTTON #########################################################*/

QPushButton {
    color: @white;
    text-align: center;
    background-color: @buttonBackgroundDefault;
    border: 0px solid @menuBackground;
    border-color: black; /* simulates shadow under the button */
    padding: 4px 20px;
    margin: 2px 2px;
    min-height: 16px; /* same as QTabBar QPushButton min-width */
    border-radius: 4px;
}

QPushButton:hover,
QPushButton:focus {
    background-color: @buttonBackgroundHover;
    border-color: @lightGrey;
}

QPushButton:disabled,
QPushButton:disabled:checked {
    color: @disabledText;
    background-color: @buttonBackgroundDisabled;
    border-color: #5b5b5b;
}

QPushButton:pressed {
    color: @white;
    background-color: @buttonBackgroundBright1;
}

QPushButton:checked {
    background-color: @selectionBackgroundColor;;
    border-color: selectionBackgroundColor;
}

/* Color Buttons */
Gui--ColorButton,
Gui--ColorButton:disabled {
    padding: 0px; /* reset */
    margin: 0px; /* reset */
}

Gui--ColorButton {
    background-color: @buttonBackgroundDefault;
    border: 1px solid @menuBackground;
    border-color: black; /* simulates shadow under the button */
}

Gui--ColorButton:disabled {
    background-color: @buttonBackgroundDisabled;
    border-color: #5b5b5b;
}

Gui--ColorButton:hover,
Gui--ColorButton:focus {
    background-color: @buttonBackgroundDefault;
}

Gui--ColorButton:pressed {
    background-color: @buttonBackgroundBright1;
}

/* Pushbutton style for "..." inside Placement cell which launches Placement tool */
Gui--PropertyEditor--PropertyEditor > QWidget > QWidget > QPushButton {
    color: #dadada;
    background-color: @buttonBackgroundDefault;
    border: 1px solid @menuBackground;
    min-width: 16px; /* reset it due to larger value on regular QPushButton, same or bigger value as regular QPushButton min-height */
    border-radius: 0px;
    margin: 0px; /* reset */
    padding: 0px; /* reset */
    border-radius: 3px;
}

Gui--PropertyEditor--PropertyEditor > QWidget > QWidget > QPushButton:hover {
    color: @white;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #626262, stop:1 #464646);
}

Gui--PropertyEditor--PropertyEditor > QWidget > QWidget > QPushButton:pressed {
    color: @white;
    background-color: @buttonBackgroundBright1;
}

/* Fix for Expressions description QFrame that is "broken" with initial reset */
Gui--PropertyEditor--PropertyEditor > QWidget > QWidget > QWidget > QWidget > QFrame {
    background-color: @mainBackground; /* main background color */
    border: 1px solid @borders;
    border-radius: 2px;
    padding: 2px 6px;
}

QPushButton:checked {
    background-color: @selectionBackgroundColor;;
    border-color: selectionBackgroundColor;
}


/*###### TOOL BUTTON INSIDE DIALOGS THAT WORKS AS PUSH BUTTONS ###############*/

/* found under Tools -> Customize -> Macros -> Pixmap "..." button */
QToolButton {
    color: @white;
    text-align: center;
    background-color: transparent;
    border: 0px solid @menuBackground;
    border-color: black; /* simulates shadow under the button */
    padding: 3px; /* different than regular QPushButton */
    margin: 2px; /* different than regular QPushButton */
    min-height: 16px; /* same as QTabBar QPushButton min-width */
    border-radius: 4px;
}

QToolButton:checked {
    background-color: @selectionBackgroundColor;;
}

QToolButton::down-arrow:enabled {
     image: url("qss:icons/down_arrow_light.png");
}

QToolButton:hover,
QToolButton:focus {
    background-color: @buttonBackgroundHover;
}

QToolButton:disabled,
QToolButton:disabled:checked {
    color: #4c4c4c;
    background-color: @buttonBackgroundDisabled;
    border-color: #5b5b5b;
}

QToolButton:pressed {
    color: @white;
    background-color: @buttonBackgroundBright1;
}


/*###### RADIO BUTTON ########################################################*/

QRadioButton::indicator:unchecked {
    color: black;
    background-color: @buttonBackgroundDefault;
    border: 1px solid @borders;
}

QRadioButton::indicator:unchecked:hover {
    background-color: @menuHoverBackground;
}

QRadioButton::indicator:checked {
    background-color: @buttonBackgroundBright1;
    border: 1px solid @borders; /* QCheckBox has the same color */
    image:url("qss:icons/radiobutton_light.png");
}

QRadioButton,
QRadioButton:disabled {
    padding: 3px;
    outline: none;
    background-color: transparent;
}

QRadioButton {
    color: @white;
}

QRadioButton:disabled {
    color: @disabledText;
}

QRadioButton::indicator {
    width: 11px;
    height: 11px;
    border-radius: 6px;
}

QRadioButton::indicator:disabled {
    border: 1px solid @disabledText;
}

QRadioButton::indicator:disabled {
    color: @disabledText;
    background-color: transparent;
}

QRadioButton:focus {
    border: none;
}


/*###### CHECKBOX ############################################################*/

QGroupBox,
QGroupBox:disabled,
QCheckBox,
QCheckBox:disabled {
    color: @white;
    padding: 3px;
    outline: none;
    background-color: transparent;
}

QGroupBox::indicator,
QCheckBox::indicator {
    color: @white;
    background-color: @buttonBackgroundDefault;
    border: 1px solid @borders;
    width: 11px;
    height: 11px;
    border-radius:2px;
}

QGroupBox::indicator:hover,
QCheckBox::indicator:hover {
    background-color: @buttonBackgroundHover;
}

QGroupBox::indicator:pressed,
QGroupBox::indicator:non-exclusive:checked:pressed,
QGroupBox::indicator:indeterminate:pressed,
QGroupBox::indicator:checked:pressed,
QCheckBox::indicator:pressed,
QCheckBox::indicator:non-exclusive:checked:pressed,
QCheckBox::indicator:indeterminate:pressed,
QCheckBox::indicator:checked:pressed {
    border-color: @borders; /* Same as not pressed, just to disable the effect without deleting the code */
}

QGroupBox::indicator:checked,
QCheckBox::indicator:checked {
    background-color: @buttonBackgroundBright1;
    border: 0px solid @borders; /* QCheckBox has the same color */
    image:url("qss:icons/checkbox_light.png");
}

QGroupBox:disabled,
QCheckBox:disabled {
    color: @disabledText;
    background-color: transparent;
}

QGroupBox::indicator:checked:disabled,
QCheckBox::indicator:checked:disabled {
    image:url("qss:icons/checkbox_disabled.png");
}

QGroupBox::indicator:disabled,
QCheckBox::indicator:disabled {
    background-color:  @tableBackground;
    border: 0px solid @disabledText;
}

QGroupBox::indicator:indeterminate,
QCheckBox::indicator:indeterminate {
    background-color: @buttonBackgroundBright1;
    border: 0px solid @borders; /* QCheckBox has the same color */
    image: url("qss:icons/checkbox_indeterminate_light.png");
}

QGroupBox:focus
QCheckBox:focus {
    border: none;
}


/*###### CHECKBOX INSIDE LIST WIDGET AND TREE VIEW ###########################*/

QListWidget::indicator,
QTreeView::indicator {
    color: @white;
    background-color: @buttonBackgroundBright1;
    border: 0px solid @borders;
    width: 11px;
    height: 11px;
    border-radius:2px;
}

/* fix for QTreeView::indicator loosing its margin */
QTreeView::indicator {
    margin: 3px;
}

QListWidget::indicator:hover,
QTreeView::indicator:hover {
    background-color: @buttonBackgroundBright1;
}

QListWidget::indicator:checked,
QTreeView::indicator:checked {
    background-color: @buttonBackgroundBright1;
    image:url("qss:icons/checkbox_light.png");
}

QListWidget::indicator:indeterminate,
QTreeView::indicator:indeterminate {
    background-color: @buttonBackgroundBright1;
    image: url("qss:icons/checkbox_indeterminate_light.png");
}

QListWidget::indicator:checked:disabled,
QTreeView::indicator:checked:disabled {
    background-color: @buttonBackgroundBright1;
    image: url("qss:icons/checkbox_disabled.png");
}

QTableView > QWidget > QCheckBox::indicator {
    background-color: @buttonBackgroundBright1;
}

QTableView > QWidget > QCheckBox::indicator:hover {
    background-color: @buttonBackgroundBright2;
}


/*###### SLIDER ##############################################################*/

QSlider::handle:horizontal:disabled,
QSlider::handle:vertical:disabled {
    border-color: transparent;
    background-color: transparent;
}

QSlider::groove:horizontal {
    border: 1px solid @buttonBackgroundBright1;
    height: 4px;
    background: @buttonBackgroundBright1;
    margin: 0px;
    border-radius: 3px;
}

QSlider::handle:horizontal {
    background: @buttonBackgroundDefault;
    border: 1px solid @borders;
    width: 10px;
    height: 10px;
    margin: -8px 0;
    border-radius: 3px;
}

QSlider::handle:horizontal:hover {
    background: @buttonBackgroundHover;
}

QSlider::handle:horizontal:pressed {
    background: @selectionBackgroundColor;
}

QSlider::groove:vertical {
    border: 1px solid @buttonBackgroundBright1;
    width: 4px;
    background: @buttonBackgroundBright1;
    margin: 0px;
    border-radius: 3px;
}

QSlider::handle:vertical {
    background: @selectionBackgroundColor;
    border: 1px solid @borders;
    width: 10px;
    height: 10px;
    margin: 0 -8px;
    border-radius: 3px;
}


/*###### TOOLBAR BUTTONS #####################################################*/

/*QToolBar > QComboBox,   disabled because creates different margins for body and drop-down button */
QToolBar > QAbstractSpinBox,
QToolBar > QSpinBox,
QToolBar > QDoubleSpinBox,
QToolBar > QLineEdit,
QToolBar > QTextEdit,
QToolBar > QTimeEdit,
QToolBar > QDateEdit,
QToolBar > QDateTimeEdit {
    margin: 0px 2px;
    padding: 0px;
    min-width: 70px; /* necessary to show its content */
}

QToolBar > QComboBox,
QToolBar > QAbstractSpinBox,
QToolBar > QSpinBox,
QToolBar > QDoubleSpinBox,
QToolBar > QLineEdit,
QToolBar > QTextEdit,
QToolBar > QTimeEdit,
QToolBar > QDateEdit,
QToolBar > QDateTimeEdit {
    min-height: 0px; /* reset it inside Tool Bar due to the user ability to set the "size of toolbar icons" inside Preferences  */
}

QToolBar > QPushButton {
    padding: 0px;
    margin: 1px; /* doesn't work with :left, :right:, :top or :bottom sub-controls */
    min-width: 16px; /* could not be larger due to switchable Preferences "Size of toolbar icons" */
    min-height: 16px; /* could not be larger due to switchable Preferences "Size of toolbar icons" */
    border-radius: 4px; /* same as regular QPushButton */
}

QToolBar > QPushButton:checked {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #638dcf, stop:1 #4771b3);
    border: 1px solid black;
}

QToolBar > QPushButton:!checked {
    background-color: @buttonBackgroundDefault;
    border: 1px solid @menuBackground;
    border-color: black; /* simulates shadow under the button */
}

QToolBar > QPushButton:checked:hover {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #6f96d3, stop:1 #557cba);
}

QToolBar > QPushButton:!checked:hover {
    background-color: @buttonBackgroundHover;
}

QToolBar > QPushButton:checked:pressed {
    background-color: @selectionBackgroundColor;
}

QToolBar > QPushButton:!checked:pressed {
    color: @white;
    background-color: @buttonBackgroundBright1;
}

QToolBar > QPushButton:checked:disabled,
QToolBar > QPushButton:!checked:disabled {
    border: none;
    background-color: transparent;
}

QToolBar > QToolButton {
    margin: 2px;
    padding: 2px;
    border-radius: 3px;
}

QToolBar > QToolButton:hover {
    background-color: @tableBackground;
}

QToolBar > QToolButton:pressed {
    background-color: @tableBackground;
}

/* ToolBar menu buttons (buttons with drop-down menu) */
QToolBar > QToolButton#qt_toolbutton_menubutton {
    padding-right: 20px; /* Hack to add more width to buttons with menu */
    border: 1px solid transparent;
    border-radius: 3px;
}

QToolBar > QToolButton#qt_toolbutton_menubutton:hover,
QToolBar > QToolButton#qt_toolbutton_menubutton:pressed,
QToolBar > QToolButton#qt_toolbutton_menubutton:open {
    border: 1px solid #7cabf9;
}

QToolBar QToolButton::menu-button,
QToolBar > QToolButton#qt_toolbutton_menubutton::menu-button {
    border: none;
    border-top-right-radius: 3px;
    border-bottom-right-radius: 3px;
    width: 16px; /* 16px width + 4px for border = 20px allocated above */
    outline: none;
    background-color: transparent;
}

QToolBar > QToolButton#qt_toolbutton_menubutton::menu-button:hover,
QToolBar > QToolButton#qt_toolbutton_menubutton::menu-button:pressed,
QToolBar > QToolButton#qt_toolbutton_menubutton::menu-button:open {
    background-color: qlineargradient(spread:pad, x1:1, y1:0.8, x2:1, y2:0, stop:0 @selectionBackgroundColor;, stop:1 #7cabf9);
}

QToolBar > QToolButton::menu-arrow {
    background-image: url("qss:icons/down_arrow_light.png");
    background-position: center center;
    background-repeat: none;
    subcontrol-origin: padding;
    subcontrol-position: bottom right;
    height: 10px; /* same as arrow image */
}

QToolBar > QToolButton::menu-arrow:hover {
    background-image: url("qss:icons/down_arrow_lighter.png");
}

QToolBar > QToolButton::menu-arrow:open {
    background-image: url("qss:icons/down_arrow_lighter.png");
}

/* when QToolButton is checked: */
QToolBar > QToolButton:checked {
    background-color: @selectionBackgroundColor;
    border: 0px solid @selectionColor;
    border-top-color: @selectionColor;
}

QToolBar > QToolButton:checked:hover {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #557cba, stop:1 #6f96d3);
}

QToolBar > QToolButton:checked:pressed {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #638dcf, stop:1 #4771b3);
    border: 0px solid @selectionColor;
    border-color: @selectionColor;
}

QToolBar > QToolButton:!checked:pressed {
    background-color: @tableBackground;
    border: none;
}

/*The "show more" button  (it can also be stylable with "QToolBarExtension" */
QToolBar QToolButton#qt_toolbar_ext_button {
    margin: 0px;
    padding: 0px;
    /*background-image: url("qss:icons/more_light.png");*/
    image: transparent;
    background-repeat: none;
    background-position: center left;
}

QToolBar QToolButton#qt_toolbar_ext_button:hover {
    /*background-image: url("qss:icons/more_light.png");*/
    border-color: @borders;
    background-color: @borders;
}

QToolBar QToolButton#qt_toolbar_ext_button:on {
    /*background-image: url("qss:icons/more_light.png");*/
    border-color: @borders;
    background-color: @borders;
}


/*###### TABLES ##############################################################*/

QTableView {
    gridline-color: transparent;
    selection-color: @selectionBackgroundColor;
    selection-background-color: @white;
}

QTableView::item {
    border-bottom: 0px solid @tableBorders;
}

QTableView::item:hover  {
    background-color: @tableBackground;  /* temporal: is it displayed in Linux or Windows? on OSX it isn't */
}

QTableView::item:disabled  {
    color: @borders;
}

QTableView::item:selected  {
    color: @selectionColor; /* should be similar to QListView selection-color */
    background-color: @selectionBackgroundColor; /* should be similar to QListView selection-background-color */
    show-decoration-selected: 1; /* make the selection span the entire width of the view */
}

/* fix for elements inside the cells */
QTableView > QWidget > QComboBox,
QTableView > QWidget > QAbstractSpinBox,
QTableView > QWidget > QSpinBox,
QTableView > QWidget > QDoubleSpinBox,
QTableView > QWidget > QLineEdit,
QTableView > QWidget > QTextEdit,
QTableView > QWidget > QTimeEdit,
QTableView > QWidget > QDateEdit,
QTableView > QWidget > QDateTimeEdit,
QTableView > QWidget > QComboBox:drop-down,
QTableView > QWidget > QAbstractSpinBox:up-button,
QTableView > QWidget > QSpinBox:up-button,
QTableView > QWidget > QDoubleSpinBox:up-button,
QTableView > QWidget > QTimeEdit:up-button,
QTableView > QWidget > QDateEdit:up-button,
QTableView > QWidget > QDateTimeEdit:up-button,
QTableView > QWidget > QAbstractSpinBox:down-button,
QTableView > QWidget > QSpinBox:down-button,
QTableView > QWidget > QDoubleSpinBox:down-button,
QTableView > QWidget > QTimeEdit:down-button,
QTableView > QWidget > QDateEdit:down-button,
QTableView > QWidget > QDateTimeEdit:down-button,
QTableView > QWidget > Gui--ColorButton {
    border-radius: 0px;
}

QTableView > QWidget > QComboBox,
QTableView > QWidget > QAbstractSpinBox,
QTableView > QWidget > QSpinBox,
QTableView > QWidget > QDoubleSpinBox,
QTableView > QWidget > QLineEdit,
QTableView > QWidget > QTextEdit,
QTableView > QWidget > QTimeEdit,
QTableView > QWidget > QDateEdit,
QTableView > QWidget > QDateTimeEdit {
    color: @white;
    background-color: transparent;
    border-color: transparent;
}

QTableView > QWidget > QComboBox:drop-down,
QTableView > QWidget > QAbstractSpinBox:up-button,
QTableView > QWidget > QSpinBox:up-button,
QTableView > QWidget > QDoubleSpinBox:up-button,
QTableView > QWidget > QTimeEdit:up-button,
QTableView > QWidget > QDateEdit:up-button,
QTableView > QWidget > QDateTimeEdit:up-button,
QTableView > QWidget > QAbstractSpinBox:down-button,
QTableView > QWidget > QSpinBox:down-button,
QTableView > QWidget > QDoubleSpinBox:down-button,
QTableView > QWidget > QTimeEdit:down-button,
QTableView > QWidget > QDateEdit:down-button,
QTableView > QWidget > QDateTimeEdit:down-button,
QTableView > QWidget > Gui--ColorButton {
    background-color: @tableBackground;
}

QTableView > QWidget > QComboBox:focus,
QTableView > QWidget > QAbstractSpinBox:focus,
QTableView > QWidget > QSpinBox:focus,
QTableView > QWidget > QDoubleSpinBox:focus,
QTableView > QWidget > QLineEdit:focus,
QTableView > QWidget > QTextEdit:focus,
QTableView > QWidget > QTimeEdit:focus,
QTableView > QWidget > QDateEdit:focus,
QTableView > QWidget > QDateTimeEdit:focus {
    color: @white;
    selection-color: @white;
    selection-background-color: @selectionBackgroundColor;;
    border-color: @white;
    background-color: @buttonBackgroundBright1;
}

QTableView > QWidget > QComboBox:disabled,
QTableView > QWidget > QAbstractSpinBox:disabled,
QTableView > QWidget > QSpinBox:disabled,
QTableView > QWidget > QDoubleSpinBox:disabled,
QTableView > QWidget > QLineEdit:disabled,
QTableView > QWidget > QTextEdit:disabled,
QTableView > QWidget > QTimeEdit:disabled,
QTableView > QWidget > QDateEdit:disabled,
QTableView > QWidget > QDateTimeEdit:disabled {
    color: @tableBackground;
    background-color: transparent;
    border-color: transparent;
}

QTableView > QWidget > QComboBox:read-only,
QTableView > QWidget > QAbstractSpinBox:read-only,
QTableView > QWidget > QSpinBox:read-only,
QTableView > QWidget > QDoubleSpinBox:read-only,
QTableView > QWidget > QLineEdit:read-only,
QTableView > QWidget > QTextEdit:read-only,
QTableView > QWidget > QTimeEdit:read-only,
QTableView > QWidget > QDateEdit:read-only,
QTableView > QWidget > QDateTimeEdit:read-only {
    color: @white;
    background-color: transparent;
    border-color: transparent;
}


/*###### EXPERIMENTAL ########################################################*/

/* Fix for preventing elements in different rows to accidentaly overlap */
QDialog QGroupBox QFrame {
    margin: 2px 0px;
}

*[mandatoryField="true"] {
    background-color: @selectionBackgroundColor
}

QWidget {
    font-size: 9pt;
}

QCalendarWidget QWidget#qt_calendar_navigationbar {
  background-color: @mainBackground;
}